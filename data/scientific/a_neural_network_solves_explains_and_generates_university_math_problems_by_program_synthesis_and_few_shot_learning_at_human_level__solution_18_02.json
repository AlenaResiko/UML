{
  "authors": [
    "Iddo Drori",
    "Sarah Zhang",
    "Reece Shuttleworth",
    "Leonard Tang",
    "Albert Lu",
    "Elizabeth Ke",
    "Kevin Liu",
    "Linda Chen",
    "Sunny Tran",
    "Newman Cheng",
    "Roman Wang",
    "Nikhil Singh",
    "Taylor L. Patti",
    "Jayson Lynch",
    "Avi Shporer",
    "Nakul Verma",
    "Eugene Wu",
    "Gilbert Strang"
  ],
  "date_published": "2021-12-31",
  "raw_tex": "\\section{Solutions for MIT 18.02: Multivariable Calculus}\n\\label{sec:solution-18.02}\n\n\\paragraph{Prereq} Calculus I (GIR)\n\\paragraph{Units} 5-0-7\n\\paragraph{Syllabus} Calculus of several variables. Vector algebra in 3-space, determinants, matrices. Vector-valued functions of one variable, space motion. Scalar functions of several variables: partial differentiation, gradient, optimization techniques. Double integrals and line integrals in the plane; exact differentials and conservative fields; Green's theorem and applications, triple integrals, line and surface integrals in space, Divergence theorem, Stokes' theorem; applications.\n\\paragraph{Textbook} Edwards, C.; Penney, David\tMultivariable Calculus(6th ed.) Pearson Education, ISBN 9780130339676.\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 1: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Polar Coordinates\n\\\\\n\\hline\nOriginal question & Sketch the graph of the polar equation. Indicate any symmetries around either coordinate axis or the origin. $r   (2 + 7\\sin(\\theta))(\\cos(5\\theta))$\n\\\\\n\\hline\nCodex input & Write a function using matplotlib to plot the graph of the polar equation r   (2 + 7*sin(theta))*(cos(5*theta))\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef polar_eq(theta):\n   return (2 + 7*np.sin(theta))*(np.cos(5*theta))\n\ntheta   np.linspace(0, 2*np.pi, 100)\n\nplt.polar(theta, polar_eq(theta))\nplt.show()\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & \\includegraphics[height50mm]{18.02-q1-codex-output-plot.png}\n\\\\\n\\hline\nSolution type & Automatic Zero-Shot\\\\\n\\hline\nCodex code explanation & 1. Importing numpy and matplotlib.pyplot \\newline\n2. Defining a function that takes theta as an argument \\newline\n3. Creating a list of 100 evenly spaced values between 0 and 2pi \\newline\n4. Plotting the polar equation\\\\\n\\hline\nGPT-3 response & The graph has symmetry around the origin and the y-axis.\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 2: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Analytical Geometry and Polar Coordinates\n\\\\\n\\hline\nOriginal question & Find the center and radius of the circle described in the given equation. $x^2 + 2x + y^2   4$\n\\\\\n\\hline\nCodex input & Find the center and radius of the circle described in the given equation. $x^2 + 2x + y^2   4$.\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nimport sympy as sp\n\nx, y   sp.symbols('x y')\n\n# Equation of the circle\neq   x**2 + 2*x + y**2 - 4\n\n# Solving the equation\nsol   sp.solve(eq, y)\n\n# Printing the solution\nprint(sol)\n\n# Finding the center\ncenter   sp.solve(eq, x)\nprint(center)\n\n# Finding the radius\nradius   sp.sqrt(center[0]**2 + sol[0]**2)\nprint(radius)\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & Center: (-1,0); Radius: $\\sqrt{5}$\n\\\\\n\\hline\nSolution type & Automatic Zero-Shot\\\\\n\\hline\nCodex code explanation & 1. We import the sympy library and the symbols function. \\newline\n2. We define the equation we want to find the radius and center of. \\newline\n3. We create a Circle object from the equation. \\newline\n4. We print the radius and center of the circle.\\\\\n\\hline\nGPT-3 response & The center of the circle is at (1, 0) and the radius is $\\sqrt{3}$.\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 3: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Polar Coordinates\n\\\\\n\\hline\nOriginal question & Sketch the graph of the polar equation. Indicate any symmetries around either coordinate axis or the origin. $r   3\\theta$ (spiral of Archimedes)\n\\\\\n\\hline\nCodex input & Write a function using matplotlib to plot the graph of the polar equation r   3*theta (spiral of Archimedes).\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ntheta   np.arange(0, 2*np.pi, 0.01)\nr   3*theta\n\nplt.polar(theta, r)\nplt.show()\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & \\includegraphics[height50mm]{18.02-q3-codex-output-plot.png}\n\\\\\n\\hline\nSolution type & Automatic Zero-Shot\\\\\n\\hline\nCodex code explanation & \n1. Importing the numpy and matplotlib.pyplot modules. \\newline\n2. Creating a range of values for theta from 0 to 2$\\pi$ with an increment of 0.01. \\newline\n3. Creating a range of values for r from 0 to 30 with an increment of 0.01. \\newline\n4. Creating a polar plot using the polar() function. \\newline\n5. Showing the plot using the show() function.\\\\\n\\hline\nGPT-3 response & The graph of the polar equation is a spiral of Archimedes. There is no symmetry around either coordinate axis or the origin.\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 4: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Area Computations in Polar Coordinates\n\\\\\n\\hline\nOriginal question & In Problems 7 through 16. find the area bounded by the given curve. $r   2*\\cos(\\theta)$\n\\\\\n\\hline\nCodex input & f(theta)2*cos(theta)\\newline\nUsing Sympy, starting from 0, find the first two points that f(theta)0 and set teh solutions to a and b.\\newline\nUse the solution to Integrate f(theta)**2/2 from a to b.\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nfrom sympy import *\n\ntheta   Symbol('theta')\n\nf   2*cos(theta)\n\na   solve(f, theta)\n\nprint(a)\n\nb   integrate(f**2/2, (theta, a[0], a[1]))\n\nprint(b)\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & $\\pi$\n\\\\\n\\hline\nSolution type & Manual\\\\\n\\hline\nCodex code explanation & 1. The first line imports the sympy library.\\newline\n2. The second line defines the function f(theta) as 2*cos(theta).\\newline\n3. The third line defines the symbol theta.\\newline\n4. The fourth line uses the solve() function to find the two values of theta that make f(theta)0.\\newline\n5. The fifth line uses the integrate() function to find the area under the curve from a to b.\\\\\n\\hline\nGPT-3 response & The area is 8$\\pi$.\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 5: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Parametric Curves\n\\\\\n\\hline\nOriginal question & Eliminate the parameter and then sketch the curve. $x   e^t, y   4e^2t$\n\\\\\n\\hline\nCodex input & Plot the parametric curve. $x   e^t, y   4e^2t$\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nt   np.linspace(-2, 2, 100)\nx   np.exp(t)\ny   4 * np.exp(2 * t)\n\nplt.plot(x, y)\nplt.show()\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & \\newline \\includegraphics[height50mm]{18.02-q5-codex-output-plot.png}\n\\\\\n\\hline\nSolution type & Manual\\\\\n\\hline\nCodex code explanation & 1. Importing the numpy and matplotlib.pyplot modules.\\newline\n2. Defining the t array.\\newline\n3. Defining the x and y arrays.\\newline\n4. Plotting the curve.\\\\\n\\hline\nGPT-3 response & $y   4e^2t$\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 6: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Integral Computations with Parametric Curves\n\\\\\n\\hline\nOriginal question & Find the arc length of the given curve. $x   2t, y   \\frac{2}{3}*t^{\\frac{3}{2}}, 5 \\leq t \\leq 12$\n\\\\\n\\hline\nCodex input & Use sympy to integrate from 5 to 12 to find the arc length of x   2t, y   2/3*t**(3/2)\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nfrom sympy import *\n\nx   2*t\ny   2/3*t**(3/2)\n\ndx   diff(x, t)\ndy   diff(y, t)\n\nds   sqrt(dx**2 + dy**2)\n\nprint(integrate(ds, (t, 5, 12)))\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & $\\frac{74}{3}$\n\\\\\n\\hline\nSolution type & Automatic Zero-Shot\\\\\n\\hline\nCodex code explanation & 1. Define x and y as functions of t\\newline\n2. Define dx and dy as the derivatives of x and y with respect to t\\newline\n3. Define ds as the magnitude of dx and dy\\newline\n4. Integrate ds from 5 to 12\\\\\n\\hline\nGPT-3 response & The arc length of the given curve is approximately 33.4.\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 7: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Parabola\n\\\\\n\\hline\nOriginal question & Sketch the parabola with the given equation. Show and label its vertex, focus, axis, and directrix. $y^2   12x$\n\\\\\n\\hline\nCodex input & Use least squares to find a second order polynomial passing through points (2. 3), (4, 3), and (6,-5).\\newline\nUse polynomial matrix.\\newline\nThen use python to print(f'{c[0]}+{c[1]}x+{c[2]}x**2')\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nimport numpy as np\n\nx   np.array([2, 4, 6])\ny   np.array([3, 3, -5])\n\nA   np.array([[1, x[0], x[0]**2],\n   [1, x[1], x[1]**2],\n   [1, x[2], x[2]**2]])\n\nb   np.array([y[0], y[1], y[2]])\n\nc   np.linalg.solve(A, b)\n\nprint(f'{c[0]}+{c[1]}x+{c[2]}x**2')\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & $-5.0+6.0x+-x^2$\n\\\\\n\\hline\nSolution type & Manual\\\\\n\\hline\nCodex code explanation & 1. Create a numpy array of x values\\newline\n2. Create a numpy array of y values\\newline\n3. Create a numpy array of ones with the same length as x and y\\newline\n4. Create a numpy array of x values squared\\newline\n5. Create a numpy array of x values cubed\\newline\n6. Create a numpy array of the values of the matrix A\\newline\n7. Create a numpy array of the values of the vector b\\newline\n8. Solve the system of equations\\newline\n9. Print the values of the coefficients\\\\\n\\hline\nGPT-3 response & The parabola has a vertex at (0,0), a focus at (0,6), an axis at y0, and a directrix at y-6.\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 8: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Ellipse\n\\\\\n\\hline\nOriginal question & Find an equation of the ellipse specified. Foci (-2, 2) and (4, 2), eccentricity $1/3$\n\\\\\n\\hline\nCodex input & Write a function using sympy to find the equation of the ellipse with foci at (-2, 2) and (4, 2). The eccentricity of the ellipse is 1/3.\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nimport sympy as sp\n\nx, y   sp.symbols('x y')\n\nfoci_1   sp.Point(-2, 2)\nfoci_2   sp.Point(4, 2)\n\neccentricity   sp.Rational(1, 3)\n\nellipse   sp.Ellipse(sp.Point(0, 0), sp.sqrt(5), sp.sqrt(5 * (1 - eccentricity ** 2)))\n\nprint(ellipse.equation(x, y))\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & $\\frac{(x-1)^2}{81} + \\frac{(y-2)^2}{72}   1$\n\\\\\n\\hline\nSolution type & Automatic Zero-Shot\\\\\n\\hline\nCodex code explanation & 1. Find the center of the ellipse\\newline\n2. Find the distance between the foci\\newline\n3. Find the length of the major axis\\newline\n4. Find the length of the minor axis\\newline\n5. Find the equation of the ellipse\\\\\n\\hline\nGPT-3 response & $(x - 2)^2/9 + (y - 2)^2/4   1$\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 9: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Functions of Several Variables\n\\\\\n\\hline\nOriginal question & Describe the graph of the function $f. f(x,y)   10 - \\sqrt[2]{x^2+y^2}$\n\\\\\n\\hline\nCodex input & Plot the 3-D graph of the function $f(x,y)   10 - \\sqrt[2]{x^2+y^2}$\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\nfig   plt.figure()\nax   fig.add_subplot(111, projection'3d')\n\nx   np.arange(-10, 10, 0.1)\ny   np.arange(-10, 10, 0.1)\n\nX, Y   np.meshgrid(x, y)\nZ   10 - np.sqrt(X**2 + Y**2)\n\nax.plot_surface(X, Y, Z, rstride1, cstride1, cmap'rainbow')\n\nplt.show()\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & \\includegraphics[height50mm]{18.02-q9-codex-output-plot.png}\n\\\\\n\\hline\nSolution type & Automatic Zero-Shot\\\\\n\\hline\nCodex code explanation & 1. Create a figure object\\newline\n2. Add a subplot to the figure object\\newline\n3. Create a meshgrid of x and y values\\newline\n4. Calculate the z values for the meshgrid\\newline\n5. Plot the graph\\\\\n\\hline\nGPT-3 response & The graph of the function f is a parabola.\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 10: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Infinite Series and Convergence\n\\\\\n\\hline\nOriginal question & Determine whether the given infinite series converges or diverges. If it converges, find its sum. 1 + 3 + 5 + 7 + ... + (2n-1) + ....\n\\\\\n\\hline\nCodex input & Using sympy, determine if the sequence $s_n   2n-1$ diverges by showing the value of the limit as n goes to infinity. If the limit is infinity, then print diverges. Otherwise print converges.\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nfrom sympy import limit, oo\n\ndef sequence_diverges(sequence):\n   \"\"\"\n   Determine if the sequence s_n   2n-1 diverges by showing the value of the limit as n goes to infinity.\n   If the limit is infinity, then print diverges. Otherwise print converges.\n   \"\"\"\n   limit_value   limit(sequence, n, oo)\n   if limit_value   oo:\n   print(\"diverges\")\n   else:\n   print(\"converges\")\n\nsequence_diverges(2*n-1)\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & Diverges\n\\\\\n\\hline\nSolution type & Manual\\\\\n\\hline\nCodex code explanation & 1. The limit function takes a sequence and a value of n and returns the value of the limit as n goes to infinity.\\newline\n2. The limit function returns oo if the sequence diverges.\\newline\n3. If the limit is oo, then the sequence diverges.\\newline\n4. If the limit is not oo, then the sequence converges.\\\\\n\\hline\nGPT-3 response & The series diverges.\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 11: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Taylor Series and Taylor Polynomials\n\\\\\n\\hline\nOriginal question & Find the Taylor polynomial with remainder by using the given values of a and n. $f(x)   e^x$; $a1$, $n4$\n\\\\\n\\hline\nCodex input & Using Sympy, find the taylor series of $f(x)   e^x$ where $a1$ and $n4$\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nimport sympy as sp\n\nx   sp.Symbol('x')\n\nf   sp.exp(x)\n\nprint(sp.series(f, x, x01, n4))\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & $E + E(x - 1) + \\frac{E(x - 1)^2}{2} + \\frac{E(x - 1)^3}{6} + O((x - 1)^4, (x, 1))$\n\\\\\n\\hline\nSolution type & Automatic Zero Shot\\\\\n\\hline\nCodex code explanation & 1. We define the function f(x)   $e^x$\\newline\n2. We define the function taylor(function, a, n) which takes in a function, a value a, and a value n.\\newline\n3. We define a variable i and set it to 0.\\newline\n4. We define a variable p and set it to 0.\\newline\n5. We create a while loop that runs while i is less than or equal to n.\\newline\n6. We set p equal to p plus the derivative of the function with respect to x, evaluated at xa, divided by the factorial of i, times $(x-a)^i$.\\newline\n7. We increment i by 1.\\newline\n8. We return p.\\newline\n9. We print the value of taylor(f(x), 1, 4).\\\\\n\\hline\nGPT-3 response & $T4(x)   1 + x + x^2/2! + x^3/3! + x^4/4! + R4(x)$\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 12: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Taylor Series and Taylor Polynomials\n\\\\\n\\hline\nOriginal question & Find the Maclaurin series of the given function f by substitution. $f(x)   \\sin(2x)$\n\\\\\n\\hline\nCodex input & Use Sympy to find the maclaurin series of f(x)   sin(2x)\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nfrom sympy import *\n\nx   symbols('x')\n\nf   sin(2*x)\n\nprint(f.series(x, 0, 10))\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & $2x - \\frac{4x^3}{3} + \\frac{4x^5}{15} + \\frac{8x^7}{315} + \\cdots$\n\\\\\n\\hline\nSolution type & Automatic Zero-Shot\\\\\n\\hline\nCodex code explanation & 1. Define the variable x as a symbol\\newline\n2. Define the function f(x)   sin(2x)\\newline\n3. Print the expression f(x)\\newline\n4. Print the series expansion of f(x) about x0 up to 10 terms\\\\\n\\hline\nGPT-3 response & $\\sin(2x)   2\\sin(x)\\cos(x)$\\newline\n\n$\\sin(2x)   2(x - x^3/3! + x^5/5! - ...)(\\cos(x) + x^2/2! - x^4/4! + ...)$\\newline\n\n$\\sin(2x)   2x\\cos(x) - 2x^3/3!\\cos(x) + 2x^5/5!\\cos(x) - ... + 2x^3/3! - 2x^5/5! + ...$\\newline\n\n$\\sin(2x_   2x\\cos(x) - 2x^3/3!(\\cos(x) + x^2/2!) + 2x^5/5!(\\cos(x) + x^2/2! - x^4/4!) - ...$\"\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 13: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Integral Test\n\\\\\n\\hline\nOriginal question & Use the integral test to test the given series for convergence. $\\sum_{1}^{\\infty} 1/(2^n).$\n\\\\\n\\hline\nCodex input & Using Sympy, integrate $\\sum_{1}^{\\infty} 1/(2^n)$ from 0 to infinity. if it is finite print('converges') and if it is infinite print('diverges')\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nfrom sympy import *\n\nx   Symbol('x')\n\ndef f(x):\n   return 1/(2**x)\n\ndef integrate_f(x):\n   return integrate(f(x), (x, 0, oo))\n\nprint(integrate_f(x))\n\nif integrate_f(x).is_infinite:\n   print('diverges')\nelse:\n   print('converges')\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & Converges\n\\\\\n\\hline\nSolution type & Automatic Zero-Shot\\\\\n\\hline\nCodex code explanation & 1. We import sympy as sp.\\newline\n2. We create a symbol n.\\newline\n3. We integrate 1/(2**n) from n1 to infinity.\\\\\n\\hline\nGPT-3 response & $\\sum_{1}^{\\infty} 1/(2^n)$ converges because $\\int_1^{\\infty} 1/(2^x) dx$ converges.\\\\\n\\hline\nGPT-3 evaluation & Correct\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 14: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Comparison Tests for Positive-Term Series\n\\\\\n\\hline\nOriginal question & Use comparison tests to determine whether the infinite series converge or diverge. $\\sum_{1}^{\\infty} 1/(n^2 + n + 1)$.\n\\\\\n\\hline\nCodex input & Write a function using sympy to determine if the infinite series $\\sum_{1}^{\\infty} 1/(n^2 + n + 1)$ converges.\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nfrom sympy import Sum, Symbol, oo, limit, init_printing\n\ninit_printing()\n\nn   Symbol('n')\n\ns   Sum(1/(n**2 + n + 1), (n, 1, oo))\n\nlimit(s, n, oo)\n\n\"\"\"\nThe series converges.\n\"\"\"\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & Converges.\n\\\\\n\\hline\nSolution type & Automatic Zero-Shot\\\\\n\\hline\nCodex code explanation & 1. We create a symbol n to represent the variable in the summation.\\newline\n2. We create a summation of 1/(n\\^{}2 + n + 1) from n   1 to infinity.\\newline\n3. We use the limit function to determine if the summation converges.\\\\\n\\hline\nGPT-3 response & $\\sum_{1}^{\\infty} 1/(n^2 + n + 1)$ diverges.\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 15: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Alternating Series and Absolute Convergence\n\\\\\n\\hline\nOriginal question & Determine whether the alternating series converge or diverge. $\\sum_{1}^{\\infty} ((-1)^(n+1))/n^2$\n\\\\\n\\hline\nCodex input & Write a function using sympy to determine if the alternating series $\\sum_{1}^{\\infty} ((-1)^(n+1))/n^2$ converges or diverges.\n\"\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nfrom sympy import Sum, Symbol, oo, sympify, simplify, limit, init_printing\n\ndef alternating_series(n):\n   \"\"\"\n   This function takes a number n and determines if the alternating series\n   converges or diverges.\n   \"\"\"\n   # Initialize sympy printing\n   init_printing()\n\n   # Create a symbol for the summation\n   n   Symbol('n')\n\n   # Create the summation\n   s   Sum((-1)**(n+1)/n**2, (n, 1, oo))\n\n   # Simplify the summation\n   s   simplify(s)\n\n   # Determine if the series converges or diverges\n   if s.is_infinite:\n   print(\"The series diverges.\")\n   else:\n   print(\"The series converges.\")\n\n   # Determine the limit of the series\n   lim   limit(s, n, oo)\n\n   # Print the limit\n   print(\"The series converges to: \" + str(lim))\n\nif __name__   \"__main__\":\n   alternating_series(10)\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & Converges\n\\\\\n\\hline\nSolution type & Automatic Few-Shot (1)\\\\\n\\hline\nCodex code explanation & 1. The first line imports the Sum function from the sympy module.\\newline\n2. The second line imports the Symbol function from the sympy module.\\newline\n3. The third line imports the oo function from the sympy module.\\newline\n4. The fourth line imports the limit function from the sympy module.\\newline\n5. The fifth line imports the init\\_printing function from the sympy module.\\newline\n6. The sixth line creates a variable called n and assigns it the value of the Symbol function.\\newline\n7. The seventh line creates a variable called s and assigns it the value of the Sum function.\\newline\n8. The eighth line prints the limit of the variable s as n approaches infinity.\\\\\n\\hline\nGPT-3 response & The series converges.\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 16: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Power Series Computations\n\\\\\n\\hline\nOriginal question & Use power series to approximate the values of the given integrals accurate to four decimal places. $\\int_{0}^{1} \\sin(x)/x dx$.\n\\\\\n\\hline\nCodex input & Write a function using scipy to compute the values of the given integral $\\int_{0}^{1} sin(x)/x dx$.\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nfrom scipy.integrate import quad\n\ndef f(x):\n   return np.sin(x)/x\n\nI   quad(f, 0, 1)\nprint(I)\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & $0.9461$\n\\\\\n\\hline\nSolution type & Automatic Zero-Shot \\\\\n\\hline\nCodex code explanation & 1. Importing the integrate module from scipy\\newline\n2. Defining a function f(x)\\newline\n3. Calling the integrate.quad function, which performs the integral\\newline\n4. Printing the result\\\\\n\\hline\nGPT-3 response & \"$\\int_{0}^{1} sin(x)/x dx \\approx \\sum_{n0}^{\\infty} (-1)^n \\frac{x^{2n+1}}{(2n+1)!}$\n\n$\\int_{0}^{1} sin(x)/x dx \\approx \\sum_{n0}^{3} (-1)^n \\frac{x^{2n+1}}{(2n+1)!}$\n\n$\\int_{0}^{1} sin(x)/x dx \\approx \\frac{x}{1!} - \\frac{x^3}{3!} + \\frac{x^5}{5!} - \\frac{x^7}{7!}$\n\n$\\int_{0}^{1} sin(x)/x dx \\approx \\frac{1}{1} - \\frac{1}{6} + \\frac{1}{120} - \\frac{1}{5040}$\n\n$\\int_{0}^{1} sin(x)/x dx \\approx 0.8415$\"\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 17: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Cross Product of Two Vectors\n\\\\\n\\hline\nOriginal question & Find a x b. a   <5,-1,-2>, b   <-3,2,4>\n\\\\\n\\hline\nCodex input & Find the vector product of a x b. a   <5,-1,-2>, b   <-3,2,4>\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\na   [5,-1,-2]\nb   [-3,2,4]\n\ndef vector_product(a,b):\n   return [a[1]*b[2]-a[2]*b[1], a[2]*b[0]-a[0]*b[2], a[0]*b[1]-a[1]*b[0]]\n\nprint(vector_product(a,b))\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & $\\langle 0,-14,7 \\rangle$ \n\\\\\n\\hline\nSolution type & Automatic Zero-Shot \\\\\n\\hline\nCodex code explanation & 1. The first line creates a list called a.\\newline\n2. The second line creates a list called b.\\newline\n3. The third line creates a list called c and stores the result of the vector product of a and b in c.\\newline\n4. The fourth line prints the result of the vector product of a and b.\\\\\n\\hline\nGPT-3 response & <5,-1,-2> * <-3,2,4>   -14\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 18: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Curves and Motion in Space\n\\\\\n\\hline\nOriginal question & Show that the graph of the curve with parametric equations $x   t*(\\sin(6t))$, $y   t*(\\cos(6t))$, $z   t$ lies on the cone $z   \\sqrt[2]{x^2 + y^2}$ with its vertex at the origin and opening upward.\n\\\\\n\\hline\nCodex input & Plot the graph of the curve with parametric equations: x   t*(sin6t). y   t*(cos6t), z   t.\\newline\nThen plot the cone z   $\\sqrt{x^2 + y^2}$ with its vertex at the origin and opening upward.\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\nt   np.linspace(-10, 10, 100)\nx   t*(np.sin(6*t))\ny   t*(np.cos(6*t))\nz   t\n\nfig   plt.figure()\nax   fig.add_subplot(111, projection'3d')\nax.plot(x, y, z)\n\nr   np.sqrt(x**2 + y**2)\n\nax.plot(x, y, r, 'r')\n\nplt.show()\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & \\includegraphics[height50mm]{18.02-q21-codex-output-plot.png}\n\\\\\n\\hline\nSolution type & Automatic Few-Shot (5) \\\\\n\\hline\nCodex code explanation & 1. Generate 100 points between -10 and 10 using the linspace function from numpy.\\newline\n2. Calculate x, y, and z using the parametric equations.\\newline\n3. Plot the graph of the curve with parametric equations.\\newline\n4. Plot the cone z   $\\sqrt[2]{x^2 + y^2}$ with its vertex at the origin and opening upward.\\\\\n\\hline\nGPT-3 response & The graph of the curve with parametric equations x   t*(sin6t). y   t*(cos6t), z   t lies on the cone z   $\\sqrt[2]{x^2 + y^2}$ with its vertex at the origin and opening upward.\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 19: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Double Integrals\n\\\\\n\\hline\nOriginal question & Evaluate the iterated integral. $\\int_{0}^{2} \\int_{0}^{4} (3x+4y) dx dy$\n\\\\\n\\hline\nCodex input & Write a function using scipy.integrate.dblquad to compute the value of the double integral: $\\int_{0}^{2} \\int_{0}^{4} (3x+4y) dx dy$.\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nimport scipy.integrate as integrate\n\ndef double_integral(x, y):\n   return 3*x + 4*y\n\nintegrate.dblquad(double_integral, 0, 2, 0, 4)\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & $80$\n\\\\\n\\hline\nSolution type & Automatic Zero-Shot \\\\\n\\hline\nCodex code explanation & 1. double\\_integral is the function that we want to integrate.\\newline\n2. The first lambda function is the lower bound of the first integral.\\newline\n3. The second lambda function is the upper bound of the second integral.\\newline\n4. The dblquad function takes in the function we want to integrate, the lower bound of the first integral, the upper bound of the first integral, the lower bound of the second integral, and the upper bound of the second integral.\\newline\n5. The dblquad function returns the value of the double integral and the error associated with the double integral.\\\\\n\\hline\nGPT-3 response & $\\int_{0}^{2} \\int_{0}^{4} (3x+4y) dx dy   \\int_{0}^{2} (12y+3x^2) dy   \\int_{0}^{2} (12y+3x^2) dy   [12y^2+x^3]_0^2   288$\\\\\n\\hline\nGPT-3 evaluation & Incorrect\\\\\n\\hline\n\\end{longtable}\n\n\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 20: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Increments and Differentials\n\\\\\n\\hline\nOriginal question & Find the differential dw. $w   ln(x^2 + y^2 + z^2)$\n\\\\\n\\hline\nCodex input & In differential equations, write a function using sympy to find the differential of $w   ln(x^2 + y^2 + z^2)$\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nimport sympy as sp\n\nx, y, z   sp.symbols('x y z')\n\nw   sp.log(x**2 + y**2 + z**2)\n\nprint(sp.diff(w, x))\nprint(sp.diff(w, y))\nprint(sp.diff(w, z))\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & $\\frac{(2x + 2y + 2z)}{(x^2 + y^2 + z^2)}$\n\\\\\n\\hline\nSolution type & Automatic Zero-Shot \\\\\n\\hline\nCodex code explanation & 1. Importing sympy as sp\n2. Creating symbols x, y, and z\\newline\n3. Creating a function w   ln(x\\^{}2 + y\\^{}2 + z\\^{}2)\\newline\n4. Printing the differential of w with respect to x\\newline\n5. Printing the differential of w with respect to y\\newline\n6. Printing the differential of w with respect to z\\\\\n\\hline\nGPT-3 response & $dw   (2x dx + 2y dy + 2z dz)/(x^2 + y^2 + z^2)$\\\\\n\\hline\nGPT-3 evaluation & Correct\\\\\n\\hline\n\\end{longtable}\n\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 21: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Infinite Series\n\\\\\n\\hline\nOriginal question & Determine whether the sequence $a_n$ converges, and find its limit if it does converge. $a_n   2n/(5n-3)$\n\\\\\n\\hline\nCodex input & Write a function using SymPy to find the limit of $a_n   2n/(5n-3)$.\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nfrom sympy import limit, oo, symbols\n\nn   symbols('n')\n\nlimit(2*n/(5*n-3), n, oo)\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & $\\frac{2}{5}$\n\\\\\n\\hline\nSolution type & Automatic Zero-Shot \\\\\n\\hline\nCodex code explanation & 1. We define a variable n as a symbol\\newline\n2. We define the limit of 2n/(5n-3) as n approaches infinity\\newline\n3. We print the result\\\\\n\\hline\nGPT-3 response & The sequence a\\_n converges to 2/5.\\\\\n\\hline\nGPT-3 evaluation & Correct\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 22: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Power Series\n\\\\\n\\hline\nOriginal question & Find the interval of convergence of each power series. $\\sum_{1}^{\\infty} n*(x^n)$\n\\\\\n\\hline\nCodex input & Using sympy, compute the interval of convergence in the power series $\\sum_{1}^{\\infty} n*(x^n)$\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nfrom sympy import *\n\nx   Symbol('x')\n\n# The interval of convergence is [-1, 1]\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & $(-1,1)$\n\\\\\n\\hline\nSolution type & Manual \\\\\n\\hline\nCodex code explanation & 1. We define a symbol x and a symbol n.\\newline\n2. We define the function f(x)   x\\^{}n.\\newline\n3. We define the series S(x)   sum(n * (x\\^{}n), (n, 1, oo)).\\newline\n4. We use the limit function to find the limit of the series S(x) as x approaches 0.\\newline\n5. We print the result.\\\\\n\\hline\nGPT-3 response & The interval of convergence is $(-1,1)$.\\\\\n\\hline\nGPT-3 evaluation & Correct\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 23: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Lines and Planes in Space\n\\\\\n\\hline\nOriginal question & Write parametric equations of the straight line that passes through the points $p   (0,0,0)$ and $q   (-6,3,5)$.\n\\\\\n\\hline\nCodex input & Find a set of parametric equations for a line passing through the 3d points p(0,0,0) and q(-6,3,5) parameterized by t in [0,1]. Plot the 3d points and 3d line between them.\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\np   np.array([0,0,0])\nq   np.array([-6,3,5])\n\nt   np.linspace(0,1,100)\n\nx   p[0] + t*(q[0]-p[0])\ny   p[1] + t*(q[1]-p[1])\nz   p[2] + t*(q[2]-p[2])\n\nfig   plt.figure()\nax   fig.add_subplot(111, projection'3d')\n\nax.plot(x,y,z)\nax.scatter(p[0],p[1],p[2],c'r')\nax.scatter(q[0],q[1],q[2],c'r')\n\nplt.show()\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & \\includegraphics[height50mm]{18.02-q20-codex-output-plot.png}\\newline\n$x-6t, y3t, z5t$\n\\\\\n\\hline\nSolution type & Automatic Zero Shot \\\\\n\\hline\nCodex code explanation & 1. We are using the parametric equations of a line to find the coordinates of a point on the line.\\newline\n2. The parametric equations of a line are:\\newline\n   x   x\\_1 + t*(x\\_2 - x\\_1)\\newline\n   y   y\\_1 + t*(y\\_2 - y\\_1)\\newline\n   z   z\\_1 + t*(z\\_2 - z\\_1)\\newline\n3. We are using the points P\\_1 and P\\_2 to find the coordinates of a point on the line.\\newline\n4. We are using the symbols x, y, z to represent the coordinates of the point on the line.\\newline\n5. We are using the symbol t to represent the parameter.\\newline\n6. We are using the Matrix class to represent the coordinates of the points P\\_1 and P\\_2.\\newline\n7. We are using the Matrix class to represent the coordinates of the point on the line.\\newline\n8. We are using the Matrix class to represent the parametric equations of the line.\\\\\n\\hline\nGPT-3 response & x   0 + t(-6) y   0 + t(3) z   0 + t(5)\\\\\n\\hline\nGPT-3 evaluation & Correct\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 24: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Partial Derivatives\n\\\\\n\\hline\nOriginal question & Compute the first-order partial derivatives of each function. $f(x,y,z)   x^2*y^3*z^4$\n\\\\\n\\hline\nCodex input & Compute the first-order partial derivative of $f(x,y,z)   x^2*y^3*z^4$\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\n# Import Symbulate\nfrom symbulate import *\n\n# Define the function\ndef f(x, y, z):\n   return x**2 * y**3 * z**4\n\n# Define the partial derivative\ndef dfdx(x, y, z):\n   return 2 * x * y**3 * z**4\n\n# Define the partial derivative\ndef dfdy(x, y, z):\n   return x**2 * 3 * y**2 * z**4\n\n# Define the partial derivative\ndef dfdz(x, y, z):\n   return x**2 * y**3 * 4 * z**3\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & $\\frac{df}{dx}   2 x y^3 z^4; \\frac{df}{dy}   x^2 3 y^2 z^4; \\frac{df}{dz}   x^2 y^3 4 z^3$\n\\\\\n\\hline\nSolution type & Automatic Zero Shot\\\\\n\\hline\nCodex code explanation & 1. Define a function f(x,y,z)\\newline\n2. Define the first-order partial derivative of f with respect to x, y, and z\\newline\n3. Evaluate the partial derivative at the point (x,y,z)\\\\\n\\hline\nGPT-3 response & \n$f'x(x,y,z)   2*x*y^3*z^4$\\newline\n$f'y(x,y,z)   3*x^2*y^2*z^4$\\newline\n$f'z(x,y,z)   4*x^2*y^3*z^3$\\\\\n\\hline\nGPT-3 evaluation & Correct\\\\\n\\hline\n\\end{longtable}\n\n\\begin{longtable}{|p{3.5cm}|p{11.5cm}|}\n\\caption{MIT 18.02, Question 25: Original question, Codex input and code and code explanation, Program solution, Solution type, GPT-3 response and evaluation}\\\\\n\\hline\nTopic & Directional Derivatives and Gradient Vector\n\\\\\n\\hline\nOriginal question & Find the gradient vector V at the indicated point P. $f(x,y)   3x - 7y$: P(17,39)\n\\\\\n\\hline\nCodex input & Find the gradient vector V of $f(x,y)   3x - 7y$ at the indicated point P(17,39).\n\\\\\n\\hline\nCodex code & \\begin{lstlisting}\n# Define the function\ndef f(x,y):\n   return 3*x - 7*y\n\n# Define the gradient vector\ndef grad(x,y):\n   return np.array([3, -7])\n\n# Define the point\nP   np.array([17,39])\n\n# Find the gradient vector\nV   grad(P[0],P[1])\n\n# Print the result\nprint(\"The gradient vector of f(x,y)   3x - 7y at the point P(17,39) is V \", V)\n\\end{lstlisting}\\\\\n\\hline\nProgram solution & $\\langle 3, -7 \\rangle$\n\\\\\n\\hline\nSolution type & Automatic Zero Shot\\\\\n\\hline\nCodex code explanation & 1. Define the function f(x,y)   3x - 7y\\newline\n2. Define the gradient vector grad(x,y)   (3, -7)\\newline\n3. Define the point P(17,39)\\newline\n4. Calculate the gradient vector V   grad(P[0],P[1])\\newline\n5. Print the result\\\\\n\\hline\nGPT-3 response & V(17,39)   (3, -7)\\\\\n\\hline\nGPT-3 evaluation & Correct \\\\\n\\hline\n\n\\end{longtable}",
  "title": "A Neural Network Solves, Explains, and Generates University Math Problems by Program Synthesis and Few-Shot Learning at Human Level"
}
