{
  "authors": [
    "Leonard Tang",
    "Elizabeth Ke",
    "Nikhil Singh",
    "Nakul Verma",
    "Iddo Drori"
  ],
  "date_published": "2021-11-16",
  "raw_tex": "\\section{Harvard STAT110: Probability}\n\n\\begin{table*}[ht!]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Complementary Probability \\\\\n   \\hline\n   Original Question & In any 15-minute interval, there is a 20\\ probability that you will see at least one shooting star. What is the probability that you see at least one shooting star in the period of an hour?\\\\\n   \\hline\n   Codex Input & In any 15-minute interval, there is a 20\\ probability that you will see at least one shooting star. \\newline \\newline There are 4 15-minute intervals in an hour. \\newline \\newline Write a simulation program to estimate the probability that you see at least one shooting star in the period of an hour.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef star():\n   return random.random() < 0.2\n\ndef star_in_hour():\n   count   0\n   for i in range(4):\n   if star():\n   count + 1\n   return count > 1\n\ndef estimate_probability():\n   count   0\n   for i in range(10000):\n   if star_in_hour():\n   count + 1\n   return count / 10000\n\nprint(estimate_probability())\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 0.594\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 1 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Conditional Probability \\\\\n   \\hline\n   Original Question & A certain couple tells you that they have two children, at least one of which is a girl. What is the probability that they have two girls?\\\\\n   \\hline\n   Codex Input & A couple has two children, with at least one child being a girl. \\newline Write a simulation program to estimate the probability that the both children are girls.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef random_kid():\n   return random.choice([\"\"boy\"\", \"\"girl\"\"])\n\nboth_girls   0\nolder_girl   0\neither_girl   0\n\nrandom.seed(0)\nfor _ in range(10000):\n   younger   random_kid()\n   older   random_kid()\n   if older   \"\"girl\"\":\n   older_girl + 1\n   if older   \"\"girl\"\" and younger   \"\"girl\"\":\n   both_girls + 1\n   if older   \"\"girl\"\" or younger   \"\"girl\"\":\n   either_girl + 1\n\nprint(\"\"P(both | older):\"\", both_girls / older_girl)\nprint(\"\"P(both | either):\"\", both_girls / either_girl)\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 1/3\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 2 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Conditional Probability \\\\\n   \\hline\n   Original Question & You have a group of couples that decide to have children until they have their first girl, after which they stop having children. What is the expected gender ratio of the children that are born? What is the expected number of children each couple will have?\\\\\n   \\hline\n   Codex Input & N couples decide to have children (both boys and girls) until they have their first girl, after which they stop having children. \\newline \\newline Write a sampling program to estimate the ratio of boys to girls after all N couples stop having children.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef children():\n   return random.choice(['boy', 'girl'])\n\ndef children_until_girl(n):\n   boys   0\n   girls   0\n   for i in range(n):\n   child   children()\n   if child   'boy':\n   boys + 1\n   else:\n   girls + 1\n   break\n   return (boys, girls)\n\ndef children_until_girl_sampling(n, samples):\n   boys   0\n   girls   0\n   for i in range(samples):\n   child   children_until_girl(n)\n   boys + child[0]\n   girls + child[1]\n   return (boys, girls)\n\ndef children_until_girl_ratio(n, samples):\n   boys, girls   children_until_girl_sampling(n, samples)\n   return float(boys) / float(girls)\n\nprint(children_until_girl_ratio(5, 10000))\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 1/2\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 3 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Expected Value \\\\\n   \\hline\n   Original Question & A lazy high school senior types up application and envelopes to n different colleges, but puts the applications randomly into the envelopes. What is the expected number of applications that went to the right college?\\\\\n   \\hline\n   Codex Input & A lazy high school senior types up application and envelopes to n different colleges, but puts the applications randomly into the envelopes. Write a program to calculate the expected number of applications that were put in the right envelopes.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef main():\n   n   int(input(\"\"Enter the number of colleges: \"\"))\n   num_trials   int(input(\"\"Enter the number of trials: \"\"))\n   count   0\n   for i in range(num_trials):\n   applications   [i for i in range(n)]\n   envelopes   [i for i in range(n)]\n   random.shuffle(envelopes)\n   for i in range(n):\n   if applications[i]   envelopes[i]:\n   count + 1\n   print(\"\"The expected number of applications that were put in the right envelopes is\"\", count/num_trials)\n\nif __name__   \"\"__main__\"\":\n   main()\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 1\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 4 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Expected Value and Conditional Expectation \\\\\n   \\hline\n   Original Question & What's the expected number of coin flips until you get two heads in a row? What's the expected number of coin flips until you get two tails in a row?\\\\\n   \\hline\n   Codex Input & Generate 1000 sequences of random coin flips, and end each sequence once you get two consecutive heads. Write a program that computes the average sequence length.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef flip_coin():\n   return random.choice(['H', 'T'])\n\ndef flip_coin_until_consecutive_heads():\n   seq   ''\n   while True:\n   seq + flip_coin()\n   if seq[-2:]   'HH':\n   break\n   return seq\n\ndef flip_coin_until_consecutive_heads_1000_times():\n   seqs   []\n   for i in range(1000):\n   seqs.append(flip_coin_until_consecutive_heads())\n   return seqs\n\ndef compute_average_sequence_length():\n   seqs   flip_coin_until_consecutive_heads_1000_times()\n   return sum([len(seq) for seq in seqs]) / len(seqs)\n\nprint(compute_average_sequence_length())\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 6\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 5 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Expected Value \\\\\n   \\hline\n   Original Question & Let's say we play a game where I keep flipping a coin until I get heads. If the first time I get heads is on the nth coin, then I pay you 2n-1 dollars. How much would you pay me to play this game?\\\\\n   \\hline\n   Codex Input & Let's say we play a game where I keep flipping a coin until I get heads. \\newline \\newline If the first time I get heads is on the nth coin, then I pay you 2n-1 dollars. \\newline \\newline Write a large-scale simulation program to determine how much you would pay me to play this game.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef flip_coin():\n   return random.randint(0,1)\n\ndef play_game(n):\n   heads   False\n   count   0\n   while not heads:\n   count + 1\n   heads   flip_coin()\n   return 2*count - 1\n\ndef run_simulation(n):\n   total   0\n   for i in range(n):\n   total + play_game(n)\n   return total/n\n\nprint(run_simulation(100000))\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 3\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 6 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Bayes' Theorem and Conditional Probability \\\\\n   \\hline\n   Original Question & You have two coins, one of which is fair and comes up heads with a probability 1/2, and the other which is biased and comes up heads with probability 3/4. You randomly pick coin and flip it twice, and get heads both times. What is the probability that you picked the fair coin?\\\\\n   \\hline\n   Codex Input & You have one coin that is fair and comes up heads with probability 1/2. \\newline \\newline You have another coin that is biased and comes up heads with probability 3/4. \\newline \\newline You pick either the fair or biased coin with 50-50 probability. You flip the chosen coin twice. \\newline \\newline Write a program using Bayes' Theorem to compute and print the probability of having picked the fair coin, given the fact that the chosen coin lands heads both times.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\n# P(fair|H,H)   P(H,H|fair) * P(fair) / P(H,H)\n# P(H,H|fair)   P(H|fair) * P(H|fair)\n# P(H,H)   P(H|fair) * P(H|fair) * P(fair) + P(H|biased) * P(H|biased) * P(biased)\n# P(fair|H,H)   (1/2 * 1/2 * 1/2) / (1/2 * 1/2 * 1/2 + 3/4 * 3/4 * 1/2)\n\nprint((1/2 * 1/2 * 1/2) / (1/2 * 1/2 * 1/2 + 3/4 * 3/4 * 1/2))\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 4/13\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 7 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Conditional Probability \\\\\n   \\hline\n   Original Question & How many people do we need in a class to make the probability that two people have the same birthday more than 1/2? For simplicity, assume there are 365 days in a year.\\\\\n   \\hline\n   Codex Input & Write a program to compute how many people do we need in a class to make the probability that two people have the same birthday more than 1/2? There are 365 days in a year.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\ndef birthday_paradox(n):\n   \"\"\"\n   n: number of people in the class\n   \"\"\"\n   return 1 - (1 - 1/365)**(n*(n-1)/2)\n\nprint(birthday_paradox(23))\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 23\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 8 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & \\\\\n   \\hline\n   Original Question & A bag contains one marble which is either green or blue, with equal probabilities. A green marble is put in the bag (so there are 2 marbles now), and then a random marble is taken out. The marble taken out is green. What is the probability that the remaining marble is also green?\\\\\n   \\hline\n   Codex Input & A woman is pregnant with twin boys. \\newline Twins may be either identical or fraternal (non-identical). \\newline In general, only 1/3 of all twins born are identical. \\newline Identical twins must be of the same sex, while fraternal twins may or may not be. \\newline Assume that identical twins are equally likely to be both boys or both girls, while for fraternal twins all possibilities are equally likely. \\newline Given the above information, write a simulation program to estimate the average probability that the woman's twins are identical.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef green_marble_probability(num_trials):\n   \"\"\"\n   num_trials: number of trials\n   \"\"\"\n   num_green   0\n   for i in range(num_trials):\n   bag   ['green', 'blue']\n   random.shuffle(bag)\n   bag.append('green')\n   random.shuffle(bag)\n   if bag[0]   'green':\n   num_green + 1\n   return num_green / num_trials\n\nprint(green_marble_probability(100000))\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 2/3\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 9 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Conditional Probability \\\\\n   \\hline\n   Original Question & Calvin and Hobbes play a match consisting of a series of games, where Calvin has probability 0.5 of winning each game (independently). They play with a 'win by two' rule: the first player to win two games more than his opponent wins the match. Find the probability that Calvin wins the match (in terms of p)\\\\\n   \\hline\n   Codex Input & Calvin and Hobbes play a match consisting of a series of games, where Calvin has probability 0.5 of winning each game (independently). \\newline \\newline They play with a 'win by two' rule: the first player to win two games more than his opponent wins the match. \\newline \\newline Write a simulation program to estimate the average probability that Calvin wins the match.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef calvin_wins(n):\n   wins   0\n   for i in range(n):\n   if random.random() < 0.5:\n   wins + 1\n   return wins > 2\n\ndef calvin_wins_match(n):\n   wins   0\n   for i in range(n):\n   if calvin_wins(2):\n   wins + 1\n   return wins / n\n\nprint(calvin_wins_match(100000))\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 0.25\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 10 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Geometric Probability \\\\\n   \\hline\n   Original Question & Two witches make a nightly visit to an all-night coffee shop. Each arrives at a random time between 0:00 and 1:00. Each one of them stays for exactly 30 minutes. On any one given night, what is the probability that the witches will meet at the coffee shop?\\\\\n   \\hline\n   Codex Input & Two witches make a nightly visit to an all-night coffee shop. \\newline Each arrives at a random time between 0:00 and 1:00. \\newline Each witch stays at the coffee shop for exactly 30 minutes. \\newline Write a simulation program to estimate the average probability that the witches will see each other at the coffee shop.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef witches():\n   witches   []\n   for i in range(2):\n   witches.append(random.randint(0,60))\n   return witches\n\ndef main():\n   witches_seen   0\n   for i in range(100000):\n   w   witches()\n   if w[0] > w[1]:\n   if w[0] - w[1] < 30:\n   witches_seen + 1\n   else:\n   if w[1] - w[0] < 30:\n   witches_seen + 1\n   print(witches_seen/100000)\n\nmain()\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 0.75\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 11 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Geometric Probability \\\\\n   \\hline\n   Original Question & p and q are two points chosen at random between 0 \\& 1. What is the probability that the ratio p/q lies between 1 \\& 2?\\\\\n   \\hline\n   Codex Input & Roll a die. \\newline If the die is 4, 5, or 6, you get paid the value of the roll. \\newline If the die is 1, 2, or 3, you reroll and get paid the value of the new roll. \\newline Write a program that computes the expected value.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef prob_p_q():\n   p   random.random()\n   q   random.random()\n   if p/q > 1 and p/q < 2:\n   return True\n   else:\n   return False\n\ndef prob_p_q_sim(n):\n   count   0\n   for i in range(n):\n   if prob_p_q():\n   count + 1\n   return count/n\n\nprint(prob_p_q_sim(100000))\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 1/4\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 12 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Conditional Expectation \\\\\n   \\hline\n   Original Question & Roll a die, and you get paid what the dice shows. But if you want, you can request a second chance \\& roll the die again; get paid what the second roll shows instead of the first. What is the expected value?\\\\\n   \\hline\n   Codex Input & Roll a die, and you get paid what the number on the dice. \\newline You can request a second chance and roll the die again. You get paid the number on second roll instead of the first. \\newline Write a function to compute the expected value in Monte Carlo.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef roll_die():\n   return random.randint(1,6)\n\ndef second_chance():\n   return random.randint(1,6)\n\ndef monte_carlo(n):\n   total   0\n   for i in range(n):\n   first_roll   roll_die()\n   second_roll   second_chance()\n   total + max(first_roll, second_roll)\n   return total/n\n\nprint(monte_carlo(100000))\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 4.25\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 13 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Conditional Expectation \\\\\n   \\hline\n   Original Question & A very innocent monkey throws a fair die. The monkey will eat as many bananas as are shown on the die, from 1 to 5. But if the die shows '6', the monkey will eat 5 bananas and throw the die again. This may continue indefinitely. What is the expected number of bananas the monkey will eat?\\\\\n   \\hline\n   Codex Input & A very innocent monkey throws a fair 6-sided die repeatedly. \\newline If the die value is 1 to 5, the monkey eats that many bananas and stops. \\newline If the die value is 6, the monkey will eat 5 bananas. \\newline Write a program that computes the average number of bananas that the monkey will eat before it stops.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef main():\n   # ask user for number of trials\n   trials   int(input(\"\"How many trials? \"\"))\n   # initialize the number of bananas eaten\n   bananas   0\n   # loop for the number of trials\n   for i in range(trials):\n   # initialize the number of bananas eaten\n   bananas_eaten   0\n   # loop until the monkey stops eating bananas\n   while True:\n   # generate a random number between 1 and 6\n   die   random.randint(1, 6)\n   # if the die value is 1 to 5, the monkey eats that many bananas and stops\n   if die < 5:\n   bananas_eaten + die\n   break\n   # if the die value is 6, the monkey will eat 5 bananas\n   elif die   6:\n   bananas_eaten + 5\n   # add the number of bananas eaten to the total\n   bananas + bananas_eaten\n   # calculate the average number of bananas eaten\n   average   bananas / trials\n   # print the average number of bananas eaten\n   print(\"\"The average number of bananas eaten is\"\", average)\n\nmain()\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 4\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 14 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Conditional Expectation \\\\\n   \\hline\n   Original Question & A fair coin is tossed repeatedly until 5 consecutive heads occurs. What is the expected number of coin tosses?\\\\\n   \\hline\n   Codex Input & Write a program to simulate the average number of coin flips needed until you get 5 heads in a row for the first time. \\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef flip_coin():\n   return random.choice(['H', 'T'])\n\ndef flip_until_five_heads():\n   heads   0\n   count   0\n   while heads < 5:\n   count + 1\n   if flip_coin()   'H':\n   heads + 1\n   else:\n   heads   0\n   return count\n\ndef average_flips_until_five_heads():\n   total   0\n   for i in range(1000):\n   total + flip_until_five_heads()\n   return total / 1000\n\nprint(average_flips_until_five_heads())\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 62\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 15 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Geometric Probability, Expected Value \\\\\n   \\hline\n   Original Question & A stick of length 1 breaks at a random point distributed uniformly across it length. What is the expected length of the smaller part of the broken stick?\\\\\n   \\hline\n   Codex Input & A stick of length 1 is split into two portions at a random point distributed uniformly across it length. \\newline Write a simulation program that estimates the average length the shorter portion of the stick.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef stick_splitting(n):\n   \"\"\"\"\"\"\n   :param n: number of simulations to run\n   :return: average length of the shorter portion of the stick after splitting it in half n times.\n   \"\"\"\"\"\"\n\n   total   0\n\n   for i in range(n):\n\n   # generate a random number between 0 and 1, representing the point at which to split the stick.\n   split_point   random.random()\n\n   # generate a random number between 0 and 1, representing the length of the first portion of the stick.\n   first_portion   random.random()\n\n   # generate a random number between 0 and 1, representing the length of the second portion of the stick.\n   second_portion   1 - first_portion\n\n   # add up all lengths from each simulation run to get an average length for each simulation run.\n   total + min(first_portion, second_portion)\n\n   return total / n\n\nprint(stick_splitting(100000))\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 1/4\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 16 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Expected Value \\\\\n   \\hline\n   Original Question & You are given an urn with 100 balls (50 black and 50 white). You pick balls from urn one by one without replacements until all the balls are out. A black followed by a white or a white followed by a black is 'a color change'. Calculate the expected number of colour changes if the balls are being picked randomly from the urn.\\\\\n   \\hline\n   Codex Input & You are given an urn with 100 balls (50 black and 50 white). \\newline A sequence of balls is drawn from the urn without replacement until the urn is empty. \\newline Drawing a black ball immediately followed by a white ball is considered a color change.\\newline Drawing a white ball immediately followed by a black ball is also considered a color change. \\newline Write a simulation program that estimates the average number of color changes in a 100-ball sequence.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef color_change(urn):\n   \"\"\"\"\"\"Returns the number of color changes in a 100-ball sequence.\"\"\"\"\"\"\n   count   0\n   while len(urn) > 0:\n   ball   urn.pop()\n   if len(urn)   0: # last ball, no color change\n   break\n\n   next_ball   urn[-1] # next ball in sequence\n\n   if (ball   'B' and next_ball   'W') or (ball   'W' and next_ball   'B'): # color change!\n   count + 1\n\n   return count\n\n\ndef main():\n\n   urn   ['B'] * 50 + ['W'] * 50 # create an urn with 50 black and 50 white balls\n\n   trials   10000 # number of trials to run for simulation\n\n   total_color_changes   0 # initialize total number of color changes to zero\n\n   for i in range(trials): # run the simulation for the specified number of trials\n   random.shuffle(urn) # shuffle the balls in the urn before each trial\n\n   total_color_changes + color_change(list(urn)) # add the number of color changes in this trial to the total\n\n   print(total_color_changes / trials) # print the average number of color changes over all trials\n\nif __name__   '__main__':\n   main()\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 50\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 17 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Conditional Probability \\\\\n   \\hline\n   Original Question & X and Y are i.i.d. N(0, 1) random variables. You are given that X > 0 and Y > 0. What is the probability that Y > X?\\\\\n   \\hline\n   Codex Input & X and Y are i.i.d. N(0, 1) random variables. Write a program to calculate the probability that Y > X if both X > 0 and Y > 0.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\n# X and Y are i.i.d. N(0, 1) random variables. \n# Write a program to calculate the probability that Y > X if both X > 0 and Y > 0.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy import stats\n\n\ndef prob_Y_greater_X():\n\n   # Generate 1000 samples of X and Y, where X ~ N(0, 1) and Y ~ N(0, 1).\n\n   x   np.random.normal(loc0, scale1, size1000)\n   y   np.random.normal(loc0, scale1, size1000)\n\n   # Calculate the probability that Y > X if both X > 0 and Y > 0\n\n   prob   sum([1 for i in range(len(x)) if x[i]>0 and y[i]>0 and y[i]>x[i]])/sum([1 for i in range(len(x)) if x[i]>0 and y[i]>0])\n\n   return prob\n\n\nif __name__   '__main__':\n\n   print(prob_Y_greater_X())\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 1/2\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 18 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Conditional Expectation \\\\\n   \\hline\n   Original Question & Suppose that you roll a dice. For reach roll, yo uare paid the face value. If a roll gives 4, 5, or 6, you can roll the dice again. If you get 1, 2, or 3, the game stops. What is the expected payoff of this game?\\\\\n   \\hline\n   Codex Input & Suppose we play a game where you roll a dice. \\newline If a roll gives 4, 5, or 6, you are paid the face value and you roll the dice again. \\newline If a roll gives 1, 2, or 3, you are paid the face value and you stop rolling. \\newline Write a simulation program that estimates the average payoff of this game.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\nimport random\n\ndef roll_dice():\n   return random.randint(1,6)\n   \ndef play_game():\n   total   0.0\n   while True:\n   roll   roll_dice()\n   if roll   1 or roll   2 or roll   3:   # stop rolling and get paid the face value of the dice roll. \n   total + roll   # add the face value of the dice to the total. \n   break   # stop playing the game. \n   else:   # keep rolling and add the face value to the total. \n   total + roll   \n\n   return total   # return the total amount won from playing this game. \n\n   \n# main program starts here, DO NOT change it. It runs the simulation and prints results.   \nnumber_of_games   10000   # number of times we play this game. Change it to 1000 to see more accurate results.   \ntotal   0   # initial condition - we don't have any money at hand right now. \nfor i in range(number_of_games):\n   total + play_game()   # add the amount won from each game to get the total amount won. \nprint(\"\"The average payoff from {} games is {}\"\".format(number_of_games, total/number_of_games))\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 7\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 19 from STAT110}\n\\end{table*}\n\n\\begin{table*}[h]\n\\small \\centering\n   \\begin{tabular}{|p{3.5cm}|p{11.5cm}|}\n   \\hline\n   Topic & Bayes' Theorem and Conditional Probability \\\\\n   \\hline\n   Original Question & A spam filter is designed by looking at commonly occurring phrases in spam. Suppose that 80\\ of email is spam. In 10\\ of the spam emails, the phrase \"free money\" is used, whereas this phrase is only used in 1\\ of non-spam emails. A new email has just arrived, which does mention \"free money\". What is the probability that it is spam?\\\\\n   \\hline\n   Codex Input & Suppose that 80\\ of email is spam. In 10\\ of the spam emails, the phrase \"free money\" is used, whereas this phrase is only used in 1\\ of non-spam emails. A new email has just arrived, which mentions \"free money\". Given that the email mentions \"free money\" and using Bayes' theorem, write a program to compute and print the probability that the email is spam.\\\\\n   \\hline\n   Codex Output & \\begin{lstlisting}\ndef bayes_theorem(p_spam, p_free_money_given_spam, p_free_money_given_not_spam):\n   return (p_spam * p_free_money_given_spam) / (p_spam * p_free_money_given_spam + (1 - p_spam) * p_free_money_given_not_spam)\n\n\np_spam   0.8\np_free_money_given_spam   0.1\np_free_money_given_not_spam   0.01\n\nprint(bayes_theorem(p_spam, p_free_money_given_spam, p_free_money_given_not_spam))\n   \\end{lstlisting}\\\\\n   \\hline\n   Solution & 0.9756\\\\\n   \\hline\n   \\end{tabular}\n\\caption*{Question 20 from STAT110}\n\\end{table*}",
  "title": "Solving Probability and Statistics Problems by Program Synthesis"
}
